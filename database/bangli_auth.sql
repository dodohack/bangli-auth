-- MySQL Script generated by MySQL Workbench
-- Sun Oct  1 20:54:37 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bangli_auth
-- -----------------------------------------------------
-- Bangli JWT authentication server database.
-- 

-- -----------------------------------------------------
-- Schema bangli_auth
--
-- Bangli JWT authentication server database.
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bangli_auth` DEFAULT CHARACTER SET utf8 ;
USE `bangli_auth` ;

-- -----------------------------------------------------
-- Table `bangli_auth`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`users` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`users` (
  `uuid` CHAR(32) NOT NULL COMMENT 'Generated from timestamp based CHAR(32) UUID,  using uuid v1',
  `name` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NULL COMMENT 'Default display name, display_name from other api domains will overwrite this.',
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `email_validated` TINYINT(1) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `register_ip` INT UNSIGNED NULL COMMENT 'User IP for the first register, use INET_ATON to convert string to unsigned int',
  `last_ip` INT UNSIGNED NULL COMMENT 'User last login IP',
  `is_wp_pwd` TINYINT(1) NULL COMMENT 'If the password field contains hashed wordpress password instead of hashed by laravel. Used for user migration.',
  PRIMARY KEY (`uuid`),
  INDEX `index_email` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bangli_auth`.`password_reset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`password_reset` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`password_reset` (
  `id` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL COMMENT '用户邮箱',
  `token` VARCHAR(255) NOT NULL COMMENT '密码重置token',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `email_idx` (`email` ASC))
ENGINE = InnoDB
COMMENT = 'Used to store the password reset token, when a user triggers password reset, a new record will be created in this table and an email with the password reset URL(contains the token) will be sent to user. ';


-- -----------------------------------------------------
-- Table `bangli_auth`.`tokens`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`tokens` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`tokens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uuid` CHAR(32) NOT NULL,
  `jwt` VARCHAR(512) NOT NULL COMMENT 'the token string',
  `issued_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `expired_at` DATETIME NOT NULL,
  `device` VARCHAR(45) NULL COMMENT 'Device name guessed from agent string',
  `agent` VARCHAR(512) NULL COMMENT 'web browser agent string',
  PRIMARY KEY (`id`),
  INDEX `fk_token_uuid_idx` (`uuid` ASC),
  CONSTRAINT `fk_token_uuid`
    FOREIGN KEY (`uuid`)
    REFERENCES `bangli_auth`.`users` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Stored all valid tokens for logged user. Expired or invalidated tokens are removed from this table.';


-- -----------------------------------------------------
-- Table `bangli_auth`.`sns`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`sns` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`sns` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uuid` CHAR(32) NOT NULL,
  `qq` JSON NULL COMMENT 'QQ相关的社交网络登录信息，包括id, token, refresh_token等，以下类同',
  `wechat` JSON NULL,
  `weibo` JSON NULL,
  `facebook` JSON NULL,
  `alipay` JSON NULL,
  `douban` JSON NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sns_uuid_idx` (`uuid` ASC),
  CONSTRAINT `fk_sns_uuid`
    FOREIGN KEY (`uuid`)
    REFERENCES `bangli_auth`.`users` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '社交网络账号登录';


-- -----------------------------------------------------
-- Table `bangli_auth`.`domains`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`domains` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`domains` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(45) NOT NULL COMMENT 'website key, matches client side keys',
  `name` VARCHAR(45) NOT NULL COMMENT '站点显示名字',
  `url` VARCHAR(90) NOT NULL COMMENT '前端网站',
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'The domains we own, this should exactly match the domains we defined in bangli-admin-spa.';


-- -----------------------------------------------------
-- Table `bangli_auth`.`user_domains`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`user_domains` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`user_domains` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uuid` CHAR(32) NOT NULL,
  `domain_id` INT NOT NULL,
  `dashboard_user` TINYINT(1) NULL DEFAULT 0 COMMENT 'Is user is a dashboard user\nfor this domain.',
  INDEX `fk_ud_domain_id_idx` (`domain_id` ASC),
  INDEX `fk_ud_user_uuid_idx` (`uuid` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_ud_user_uuid`
    FOREIGN KEY (`uuid`)
    REFERENCES `bangli_auth`.`users` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ud_domain_id`
    FOREIGN KEY (`domain_id`)
    REFERENCES `bangli_auth`.`domains` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'User-domain relationship, a user can manage domain in bangli-admin-spa.';


-- -----------------------------------------------------
-- Table `bangli_auth`.`super_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bangli_auth`.`super_users` ;

CREATE TABLE IF NOT EXISTS `bangli_auth`.`super_users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uuid` CHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `uuid_UNIQUE` (`uuid` ASC),
  CONSTRAINT `fk_spu_uuid`
    FOREIGN KEY (`uuid`)
    REFERENCES `bangli_auth`.`users` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Super user table.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bangli_auth`.`domains`
-- -----------------------------------------------------
START TRANSACTION;
USE `bangli_auth`;
INSERT INTO `bangli_auth`.`domains` (`id`, `key`, `name`, `url`, `description`) VALUES (1, 'bangli_uk', '英国邦利', 'http://www.bangli.uk', NULL);
INSERT INTO `bangli_auth`.`domains` (`id`, `key`, `name`, `url`, `description`) VALUES (2, 'bangli_us', '美国邦利', 'http://www.bangli.us', NULL);

COMMIT;

